install.packages("arulesViz")
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
tabla$class <- as.factor(tabla$class)
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
res.mca <- MCA(tabla, graph = TRUE)
tabla
bool.values <- tabla$node.caps=='1'
tabla <- tabla[!bool.values,]
bool.values <- tabla$breast.quad =='1'
tabla <- tabla[!bool.values,]
tabla.scaled <- scale(tabla)
summary(tabla.scaled)
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
tabla
#Se realizan gráficos de cajas de cada variable con respecto a las clases.
boxplot.age =  ggboxplot(data = tabla, x = "class", y = "age", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.age, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = age, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.age = insert_yaxis_grob(boxplot.age, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.age)
library("cowplot")
boxplot.age =  ggboxplot(data = tabla, x = "class", y = "age", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.age, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = age, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.age = insert_yaxis_grob(boxplot.age, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.age)
boxplot.menopause =  ggboxplot(data = tabla, x = "class", y = "menopause", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.menopause, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = menopause, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.menopause = insert_yaxis_grob(boxplot.menopause, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.menopause)
boxplot.tumor.size =  ggboxplot(data = tabla, x = "class", y = "tumor.size", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.tumor.size, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = tumor.size, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.tumor.size = insert_yaxis_grob(boxplot.tumor.size, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.tumor.size)
boxplot.inv.nodes =  ggboxplot(data = tabla, x = "class", y = "inv.nodes", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.inv.nodes, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = inv.nodes, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.inv.nodes = insert_yaxis_grob(boxplot.inv.nodes, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.inv.nodes)
#Se realiza el gráfico de cajas por clase respecto a la variables "node.caps".
boxplot.node.caps =  ggboxplot(data = tabla, x = "class", y = "node.caps", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.node.caps, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = node.caps, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.node.caps = insert_yaxis_grob(boxplot.node.caps, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.node.caps)
#Se realiza el gráfico de cajas por clase respecto a la variables "deg.malig".
boxplot.deg.malig =  ggboxplot(data = tabla, x = "class", y = "deg.malig", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.deg.malig, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = deg.malig, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.deg.malig = insert_yaxis_grob(boxplot.deg.malig, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.deg.malig)
ydens = axis_canvas(boxplot.breast, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = breast, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.breast =  ggboxplot(data = tabla, x = "class", y = "breast", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.breast, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = breast, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.breast = insert_yaxis_grob(boxplot.breast, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.breast)
boxplot.breast.quad =  ggboxplot(data = tabla, x = "class", y = "breast.quad", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.breast.quad, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = breast.quad, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.breast.quad = insert_yaxis_grob(boxplot.breast.quad, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.breast.quad)
tabla
boxplot.irradiat =  ggboxplot(data = tabla, x = "class", y = "irradiat", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.irradiat, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = irradiat, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.irradiat = insert_yaxis_grob(boxplot.irradiat, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.irradiat)
boxplot.irradiat = ggplot(data=tabla, aes(x="class" , y="irradiat", fill = "class")) +
geom_bar(stat="identity", position=position_dodge())+ theme_minimal()+ theme_classic()
ggdraw(boxplot.irradiat)
boxplot.irradiat =  ggboxplot(data = tabla, x = "class", y = "irradiat", color = "class", add = "jitter") + border()
ggdraw(boxplot.irradiat)
boxplot.irradiat =  ggboxplot(data = tabla, x = "class", y = "irradiat", color = "class", add = "jitter") + border()
ydens = axis_canvas(boxplot.irradiat, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = irradiat, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.irradiat = insert_yaxis_grob(boxplot.irradiat, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.irradiat)
boxplot.inv.nodes =  ggboxplot(data = tabla, x = "class", y = "inv.nodes", color = "class", add = "jitter", label = "inv.nodes") + border()
ydens = axis_canvas(boxplot.inv.nodes, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = inv.nodes, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.inv.nodes = insert_yaxis_grob(boxplot.inv.nodes, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.inv.nodes)
boxplot.inv.nodes =  ggboxplot(data = tabla,
x = "class",
y = "inv.nodes",
color = "class",
add = "jitter",
label = "inv.nodes") + border()
ydens = axis_canvas(boxplot.inv.nodes, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = inv.nodes, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.inv.nodes = insert_yaxis_grob(boxplot.inv.nodes, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.inv.nodes)
boxplot.menopause = ggboxplot(data = tabla,
x = "class",
y = "menopause",
color = "class",
add = "jitter",
repeal = TRUE) + border()
ydens = axis_canvas(boxplot.menopause, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = menopause, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.menopause = insert_yaxis_grob(boxplot.menopause, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.menopause)
boxplot.menopause = ggboxplot(data = tabla,
x = "class",
y = "menopause",
color = "class",
add = "jitter") + border()
ydens = axis_canvas(boxplot.menopause, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = menopause, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.menopause = insert_yaxis_grob(boxplot.menopause, ydens, grid::unit(.2, "null"), position = "right")
ggdraw(boxplot.menopause)
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
tabla$tumor.size
sort(tabla$tumor.size)
lista<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
cut(lista, breaks = c(5,10))
cut(lista, breaks = c(-Inf,[5,10],Inf))
cut(lista, breaks = c(-Inf,[5,10],Inf)
cut(lista, breaks = c(-Inf,(5,10],Inf)
cut(lista, breaks = c(-Inf,(5,10),Inf)
cut(lista, breaks = c(-Inf,(5 10),Inf)
cut(lista, breaks = c(-Inf,5:10,Inf)
cls
listac = cut(lista, breaks = c(-Inf,5:10,Inf)
)
listac
listac = cut(lista, breaks = c(-Inf,5:10,Inf),labels = c("chica","media","grande"))
listac = cut(lista, breaks = c(-Inf,5:10,Inf),labels = c("chica","media","grande"))
length(c(-Inf,5:10,Inf))
listac = cut(lista, breaks = c(-Inf,5,Inf),labels = c("chica","media","grande"))
listac = cut(lista, breaks = c(-Inf,5,Inf),labels = c("chica","media"))
listac
listac = cut(lista, breaks = c(c(-Inf,5),c(5,10),c(10,Inf),labels = c("chica","media"))
cls
listac = cut(lista, breaks = c(c(-Inf,5),c(5,10),c(10,Inf)),labels = c("chica","media","grande"))
listac = cut(lista, breaks = c(-Inf,5:10,Inf),labels = c("chica","media","grande"))
length(c(-Inf,10,Inf))
listac = cut(lista, breaks = 5:10,labels = c("chica","media","grande"))
listac = cut(lista, breaks = c(-Inf,5:10,Inf))
listac
listac = cut(lista, breaks = c(-Inf,5,10,Inf),labels = c("chica","media","grande"))
listac
tabla.inv.nodes
tabla$inv.nodes
sort(tabla$inv.nodes)
tabla$deg.malig
tabla$age
sort(tabla$age)
tabla.reglas$age = cut(tabla.reglas$age, breaks = age, labels = age.names)
tabla.reglas = tabla
age = c(-Inf, 3.1, Inf)
age.names = c("adulto", "adulto mayor")
tumor.size = c(-Inf, 4, 7, Inf)
tumor.size.names = c("pequeño", "mediano", "grande")
inv.nodes = c(-Inf, 2, 5, Inf)
inv.nodes.names = c("bajo", "medio", "alto")
tabla.reglas$age = cut(tabla.reglas$age, breaks = age, labels = age.names)
tabla.reglas$age
#Laboratorio 3 - Análisis de Datos
#Integrantes:
#            -Hugo Arenas
#            -Juan Arredondo
library(cluster)
library(fpc)
library(NbClust)
library(factoextra)
library(FactoMineR)
library(Rtsne)
library(ez)
library(dplyr)
library(ggpubr)
library(knitr)
library(tidyr)
library(car)
library(lmtest)
library(vcd)
library(arulesViz)
library("cowplot")
#Los nombres originales de las variables, una breve explicación y los tipos de los datos:
#age (rango de edad): 10-19, 20-29, 30-39, 40-49,.
#menopause (momento de la menopausia): lt40, ge40, premeno.
#tumor-size (tamaño del tumor extirpado en mm): 0-4, 5-9, 10-14, .
#inv-nodes (una métrica de presencia de células cancerosas en los nodos linfáticos): 0-2, 3-5, 6-8, 9-11,.
#node-caps (evidencia de que células cancerosas atravesaron la cápsula de los nódulos linfáticos): yes, no
#deg-malig (grado histológico del tumor: bajo, intermedio, alto): 1, 2, 3.
#breast (mama afectada): left, right.
#breast-quad (cuadrante de la mama): left-up, left-low, right-up, right-low, central.
#irradiat (radioterapia): yes, no.
#Class (clase) Indica recurrencia, es la variable a predecir (no-recurrencia: 201 casos, recurrencia: 85 casos)
# Leemos los datos
dirstudio <- dirname(rstudioapi::getSourceEditorContext()$path)
filename <- "breast-cancer.data"
file <- file.path(dirstudio, filename)
#Se definen los nombres de las columnas, estos son los mismos de provistos por la base de datos
columns <- c("class",
"age",
"menopause",
"tumor.size",
"inv.nodes",
"node.caps",
"deg.malig",
"breast",
"breast.quad",
"irradiat")
tabla <- read.csv(file, col.names = columns)
tabla$age
sort(tabla$age)
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
#Laboratorio 3 - Análisis de Datos
#Integrantes:
#            -Hugo Arenas
#            -Juan Arredondo
library(cluster)
library(fpc)
library(NbClust)
library(factoextra)
library(FactoMineR)
library(Rtsne)
library(ez)
library(dplyr)
library(ggpubr)
library(knitr)
library(tidyr)
library(car)
library(lmtest)
library(vcd)
library(arulesViz)
library("cowplot")
#Los nombres originales de las variables, una breve explicación y los tipos de los datos:
#age (rango de edad): 10-19, 20-29, 30-39, 40-49,.
#menopause (momento de la menopausia): lt40, ge40, premeno.
#tumor-size (tamaño del tumor extirpado en mm): 0-4, 5-9, 10-14, .
#inv-nodes (una métrica de presencia de células cancerosas en los nodos linfáticos): 0-2, 3-5, 6-8, 9-11,.
#node-caps (evidencia de que células cancerosas atravesaron la cápsula de los nódulos linfáticos): yes, no
#deg-malig (grado histológico del tumor: bajo, intermedio, alto): 1, 2, 3.
#breast (mama afectada): left, right.
#breast-quad (cuadrante de la mama): left-up, left-low, right-up, right-low, central.
#irradiat (radioterapia): yes, no.
#Class (clase) Indica recurrencia, es la variable a predecir (no-recurrencia: 201 casos, recurrencia: 85 casos)
# Leemos los datos
dirstudio <- dirname(rstudioapi::getSourceEditorContext()$path)
filename <- "breast-cancer.data"
file <- file.path(dirstudio, filename)
#Se definen los nombres de las columnas, estos son los mismos de provistos por la base de datos
columns <- c("class",
"age",
"menopause",
"tumor.size",
"inv.nodes",
"node.caps",
"deg.malig",
"breast",
"breast.quad",
"irradiat")
tabla <- read.csv(file, col.names = columns)
tabla$class <- as.factor(tabla$class)
tabla$age <- as.factor(tabla$age)
tabla$menopause <- unclass(as.factor(tabla$menopause))
tabla$tumor.size <- as.factor(tabla$tumor.size)
tabla$inv.nodes <- as.factor(tabla$inv.nodes)
tabla$node.caps <- unclass(as.factor(tabla$node.caps))
tabla$deg.malig <- unclass(as.factor(tabla$deg.malig))
tabla$breast <- unclass(as.factor(tabla$breast))
tabla$breast.quad <- unclass(as.factor(tabla$breast.quad))
tabla$irradiat <- unclass(as.factor(tabla$irradiat))
#Se sacan los datos nulos del datagrama
bool.values <- tabla$node.caps=='1'
tabla <- tabla[!bool.values,]
bool.values <- tabla$breast.quad =='1'
tabla <- tabla[!bool.values,]
summary(tabla)
#Se realizan gráficos de cajas de cada variable con respecto a las clases.
#Se realiza el gráfico de cajas por clase respecto a la variables "age".
boxplot.age = ggboxplot(data = tabla,
x = "class",
y = "age",
color = "class",
add = "jitter") + border()
ydens = axis_canvas(boxplot.age, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = age, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.age = insert_yaxis_grob(boxplot.age, ydens, grid::unit(.2, "null"), position = "right")
print(ggdraw(boxplot.age))
#Se realiza el gráfico de cajas por clase respecto a la variables "menopause".
boxplot.menopause = ggboxplot(data = tabla,
x = "class",
y = "menopause",
color = "class",
add = "jitter") + border()
ydens = axis_canvas(boxplot.menopause, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = menopause, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.menopause = insert_yaxis_grob(boxplot.menopause, ydens, grid::unit(.2, "null"), position = "right")
print(ggdraw(boxplot.menopause))
#Se realiza el gráfico de cajas por clase respecto a la variables "tumor.size".
boxplot.tumor.size = ggboxplot(data = tabla,
x = "class",
y = "tumor.size",
color = "class",
add = "jitter") + border()
ydens = axis_canvas(boxplot.tumor.size, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = tumor.size, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.tumor.size = insert_yaxis_grob(boxplot.tumor.size, ydens, grid::unit(.2, "null"), position = "right")
print(ggdraw(boxplot.tumor.size))
#Se realiza el gráfico de cajas por clase respecto a la variables "inv.nodes".
boxplot.inv.nodes =  ggboxplot(data = tabla,
x = "class",
y = "inv.nodes",
color = "class",
add = "jitter") + border()
ydens = axis_canvas(boxplot.inv.nodes, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = inv.nodes, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.inv.nodes = insert_yaxis_grob(boxplot.inv.nodes, ydens, grid::unit(.2, "null"), position = "right")
print(ggdraw(boxplot.inv.nodes))
#Se realiza el gráfico de cajas por clase respecto a la variables "node.caps".
boxplot.node.caps = ggboxplot(data = tabla,
x = "class",
y = "node.caps",
color = "class",
add = "jitter") + border()
ydens = axis_canvas(boxplot.node.caps, axis = "y", coord_flip = TRUE) + geom_density(data = tabla, aes(x = node.caps, fill = class), alpha = 0.7, size = 0.2) + coord_flip()
boxplot.node.caps = insert_yaxis_grob(boxplot.node.caps, ydens, grid::unit(.2, "null"), position = "right")
print(ggdraw(boxplot.node.caps))
source('C:/Users/dratz/Desktop/Lab_Analisis-de-Datos/Lab3_AD/Lab3_AD.R')
tabla.reglas
tabla.reglas$age
tabla.reglas$tumor.size
reglas = apriori(
data = tabla.reglas,
parameter=list(support = 0.2, minlen = 2, maxlen = 6, target="rules"),
appearance=list(rhs = c("class=no-recurrence-events", "class=recurrence-events"))
)
inspect(sort(x = reglas, decreasing = TRUE, by = "confidence"))
